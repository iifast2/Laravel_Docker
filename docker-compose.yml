# /Users/medaminebentaieb/Docker_files/Laravel_Docker/docker-compose.yml

services:
  # Nginx Service
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d    # Nginx configuration
      - ./nginx/logs:/var/log/nginx          # Nginx logs
      - ./laravel/src:/var/www                # Laravel application code
    depends_on:
      - laravel
    networks:
      - app-network

  # Laravel Backend Service
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel
    restart: unless-stopped
    environment:
      # Laravel Application Configuration
      APP_NAME: ${APP_NAME}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL}
      FRONTEND_URL: ${FRONTEND_URL}

      # Database Configuration
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}

      # Mail Configuration
      MAIL_MAILER: ${MAIL_MAILER}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: "${APP_NAME}"

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}

      # Konnect Configuration
      KONNECT_URL: ${KONNECT_URL}
      KONNECT_API_KEY: ${KONNECT_API_KEY}

      # Other Laravel Configurations
      LOG_CHANNEL: stack
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      MEMCACHED_HOST: 127.0.0.1
    volumes:
      - ./laravel/src:/var/www                # Laravel application code
    depends_on:
      - db
    networks:
      - app-network

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql              # Persist MySQL data
    networks:
      - app-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"                              # Access via http://localhost:8080
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
